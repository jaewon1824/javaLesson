package Collection.day12;


import java.util.ArrayList;
import java.util.List;

import Collection.myapp.JavaWord;

/* 
 * JavaWordApp_V3 : 객체 지향 프로그래밍은 최대한 객체로 분리시켜서 실행되는 환경에 독립적이 되도록 합니다.
 *                  
 */

public class JavaWordApp_V3 {
    //private : JavaWordList 객체
    private JavaWordList words = new JavaWordList();
    //프로그램 실행을 시작하는 메소드
    private void start(){
        words.initialize();
        
        //단어 등록,목록,검색,삭제 기능을 메뉴로 구현합니다.
        System.out.println("단어장 프로그램 시작합니다. ".repeat(1));          //repeat 카운트횟수 반복?
        while(true){
            System.out.println("\t <메뉴를 선택하세요.>");
            System.out.println("\t 1. 단어 등록");
            System.out.println("\t 2. 단어 목록 출력");
            System.out.println("\t 3. 단어 검색");
            System.out.println("\t 4. 단어 삭제");
            System.out.println("\t 5. 프로그램 종료");
            System.out.println("선택 > ");          //메소드에 입력기능이 있을 때는 Scanner 관리가 불편
            int select = Integer.parseInt(System.console().readLine());     //키보드 입력 문자열 -> 정수
            //System.console() : 시스템의 콘솔(표준입출력장치) 객체를 리턴. readLine 입력메소드 실행

            switch (select) {
                case 1:
                        addWord();              //단어등록 메소드 실행
                        break;
                case 2:
                        listWord();             //단어 목록 조회 메소드 실행
                        break;
                case 3:
                        searchWordBy();           //단어 목록 조회 메소드 실행
                        break;
                case 4:
                        removeWord();           //단어 목록 조회 메소드 실행
                        break;
                case 5:
                        System.out.println("프로그램을 종료합니다.");
                        System.exit(0);     //main 실행을 종료
                        break;
                
                        default:
                break;
            } //switch end
        }   //while end
    }       //start end

    // JavaWordList 객체를 이용해서 수정해보세요.

    private void removeWord() {
        System.out.println("\t::단어 삭제합니다.::");
        System.out.println("삭제할 단어를 영문으로 입력하세요. _");
        String find = System.console().readLine();
        int position = words.indexOfWord(find, 0);        //단어의 인덱스를 배열로 리턴
        if(position == -1) {            //처음에 단어를 찾아서 -1이면 찾는 단어가 없음
          System.out.println("삭제할 단어는 단어장에 없습니다."); 
                        return; }
          while(position !=-1){                 //찾는 단어가 없을 때 까지 반목하기
            System.out.println("삭제할 단어 - " + words.getWord(position));
            System.out.println("삭제하려면 엔터, 취소는 n을 입력하세요. _");
            if(!System.console().readLine().equals("n")){
                words.remove(position);
                
                System.out.println("단어 삭제 완료!!");
                position--;             //삭제했을 때는 인덱스값이 포지션 뒤의 요소들은 모두 -1씩 감소.
        }
        position = words.indexOfWord(find, ++position);     //포지션은 찾은 단어 다음 위치부터 다시찾기
          }
               
           
   
       
        
        
    }
    //새로운 검색 메소드 정의
    // 1.단어 검색 : 첫 번째로 일치하는 결과만 리턴
    //        메소드 인자를 입력 데이터로 하여 메소드의 코드가 실행되고 결과는 출력으로 리턴

    // 2.단어 검색 : 검색하는 단어와 일치하는 결과를 모두 리턴(단어가 2번이상 중복저장 될 때)
    
    
    
    //searchWord 메소드를 업그레이드
    private void searchWordBy() {
        System.out.println("\t::단어 검색합니다.(단어 조회는 1 , 레벨 조회는 2 )::");
        String find = null;
        List<JavaWord> list = null;                 //조회되는 결과를 리턴받아 참조할 변수입니다.
        System.out.println(" 선택 >>> ");
        switch (System.console().readLine()){           //키보드 입력을 변수에 저장하지 않고 직접 swicth에 작성.
            case "1" :
                System.out.println("검색한 단어를 영문으로 입력하세요. _");
                find = System.console().readLine();
                list = words.searchAllByEnglish(find);
                break;
            case "2" :
                System.out.println("검색한 레벨을 입력하세요. _");
                int level = Integer.parseInt(System.console().readLine());
                list = words.searchAllByLevel(level);
                break;
            default :
                System.out.println("1,2만 입력하세요.");
                return;
        }
        System.out.println("\t:: 검색 결과 입니다. ::");
        if(list.size()==0) System.out.println("찾는 단어가 단어장에 없습니다.");
        else JavaWordList.print(list);          //static 메소드 실행
    }


        //1. 단어 한개만 리턴할 때
        /* JavaWord word = searchFirstWord(find);       //이 행이 없다면 밑 주석을 사용
        if(word!=null)         
            System.out.println("검색 결과 : "+ word.getEnglish() + "= " + word.getKorean() + "레벨 " +word.getLevel());
        else            
            System.out.println("찾는 단어가 단어장에 없습니다.");       //1) */

        //2. 단어 여러개 리턴할 때
     //출력할 리스트 results를 메소드에 전달
        //System.out.println("results :" + results);          //이쁘게 출력은 나중으로..
    

    //출력 메소드 : 출력할 여러개의 JavaWord 객체를 전달받아 이쁘게 화면에 print


    private void listWord() {
        //To Do : 리스트 words에 저장된 요소(항목)들을 모두 출력해보세요. -예쁘게
        System.out.println(String.format("%20s %20s %20s", "ENGLISH","KOREAN","LEVEL"));
        
        words.print();
    
  
        }


    private void addWord() {
        System.out.println("\t::단어 등록합니다.::");
        System.out.print("영어 단어 입력하세요. _ ");
        String english = System.console().readLine();
        System.out.print("한글 의미 입력하세요. _");
        String korean = System.console().readLine();
        System.out.println("단어레벨 입력하세요. (1:초급 2:중급 3:고급) _");
        int level = Integer.parseInt(System.console().readLine());

        words.add(new JavaWord(english, korean, level));
        //테스트 하면서 코드 분석 해보세요.

    }

    public static void main(String[] args) {
        
        //프로그램 실행하는 객체 생성하고 start 메소드 프로그램 실행 내용을 코딩
        //      (메소드로 기능을 분리할 때 main이 호출하는 static을 없애기 위함.)
        //      start 메소드 프로그램 실행 내용을 코딩
        JavaWordApp_V3 app = new JavaWordApp_V3();
        app.start();;


        
    }
}
















































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































    




